//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: MessageMount.proto
// Note: requires additional types generated from: MessageID.proto
// Note: requires additional types generated from: MessageRetCode.proto
// Note: requires additional types generated from: MessageCommon.proto
namespace Protocol
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"ReqSetMount")]
  public partial class ReqSetMount : global::ProtoBuf.IExtensible
  {
    public ReqSetMount() {}
    
    private int _MountID;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"MountID", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int MountID
    {
      get { return _MountID; }
      set { _MountID = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"AckSetMount")]
  public partial class AckSetMount : global::ProtoBuf.IExtensible
  {
    public AckSetMount() {}
    
    private int _MountID;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"MountID", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int MountID
    {
      get { return _MountID; }
      set { _MountID = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}